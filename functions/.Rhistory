df_all$Line=rep(0,nrow(df_all))
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("Proportion of variance explained by PC", i), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
?pcadapt
class(x_all)
plot(x_all)
plot(x_all,i=1,j=1)
plot(x_all,option = "manhattan",
i = 1,
j = 2,
pop,
col,
chr.info = NULL,
snp.info = NULL,
plt.pkg = "ggplot",
K = NULL
)
pcadapt(
x_all,
K = (nrow(input) - 1),
method = "mahalanobis",
min.maf = 0.05,
ploidy = NULL,
LD.clumping = NULL,
pca.only = FALSE,
tol
)
pcadapt(
x_all,
K = 2,
method = "mahalanobis",
min.maf = 0.05,
ploidy = NULL,
LD.clumping = NULL,
pca.only = FALSE,
tol
)
?plot.pcadapt
plot.pcadapt(
x_all,
K = 2,
method = "mahalanobis",
min.maf = 0.05,
ploidy = NULL,
LD.clumping = NULL,
pca.only = FALSE,
tol
)
?plot.pcadapt
plot(x_all, option = "scores") + theme_bw()
x_all
plot(x_all, option = "scores",K=1) + theme_bw()
plot(x_all, option = "scores",i=1,j=1) + theme_bw()
plot(x_all, option = "scores",i=1) + theme_bw()
plot(x_all, option = "scores",i=1,j=0) + theme_bw()
plot(x_all, option = "scores",i=1) + theme_bw()
hist(x_all$pvalues, xlab = "p-values", main = NULL, breaks = 50, col = "orange")
hist(x_all$pvalues, xlab = "p-values", main = NULL, breaks = 10, col = "orange")
K=1
x_all <- pcadapt(input = all_pcadapt, K=K)
plot(x_all, option = "scores",i=1) + theme_bw()
plot(x_all, option = "scores") + theme_bw()
plot(x_all, option = "scores") + theme_bw()
K=10
x_all <- pcadapt(input = all_pcadapt, K=K)
plot(x_all, option = "scores") + theme_bw()
x_all$scores
K=1
x_all <- pcadapt(input = all_pcadapt, K=K)
x_all$scores
plot(x_all$scores)
x_all$scores=x_all$scores*.133
plot(x_all, option = "scores") + theme_bw()
df_all$Names[2]="Washington (B)"
df_all$Names[4]="Pervenets (A)"
df_all$Names[5]="Pervenets (B)"
df_all$Names[7]="Kodiak (B)"
df_all$Names[1]="Kodiak (A)"
df_all$Names[10]="Washington (A)"
df_all$Line=rep(0,nrow(df_all))
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("Proportion of variance explained by PC", i), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
df_all <- data.frame(PC_i = x_all$scores[, i], PC_j = x_all$scores[, j], Pop = AF_all_pool_names)
i=1
j=2
df_all <- data.frame(PC_i = x_all$scores[, i], PC_j = x_all$scores[, j], Pop = AF_all_pool_names)
x_all$scores[, i]
df_all <- data.frame(PC_i = x_all$scores[, i], PC_j = x_all$scores[, j], Pop = AF_all_pool_names)
x_all$scores[, j]
j
j=1
df_all <- data.frame(PC_i = x_all$scores[, i], PC_j = x_all$scores[, j], Pop = AF_all_pool_names)
Names=c("Kodiak (2003)","Washington (b)","Near", "Pervenets (a)","Pervenets (b)", "Kiska","Kodiak (2005)", "Pribilof", "Zhemchug", "Washington (a)","Adak")
df_all=cbind(df_all,Names)
ggplot(df_all, aes_string("PC_i", "PC_j")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("% variance explained by PC", i), y = paste0("% variance explained by PC", j)) +
theme_bw() + geom_text_repel(aes(label = Names), box.padding = unit(0.35, "lines"),max.overlaps=150)+
theme(axis.text=element_text(size=12), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
theme(legend.position = "none")
df_all$Names[2]="Washington (B)"
df_all$Names[4]="Pervenets (A)"
df_all$Names[5]="Pervenets (B)"
df_all$Names[7]="Kodiak (B)"
df_all$Names[1]="Kodiak (A)"
df_all$Names[10]="Washington (A)"
df_all$Line=rep(0,nrow(df_all))
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("Proportion of variance explained by PC", i), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("Variance explained by PC", i), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
K=11
x_all <- pcadapt(input = all_pcadapt, K=K)
plot(x_all, option = "screeplot") + theme_bw()
K=10
x_all <- pcadapt(input = all_pcadapt, K=K)
library(r4ss)
setwd("/Users/ingridspies/admbmodels/AI_Pcod/2022_SS")
getwd
getwd()
setwd("/Users/ingridspies/admbmodels/AI_Pcod/2022_SS/functions")
ls()
setwd("/Users/ingridspies/admbmodels/AI_Pcod/2022-SS/functions")
setwd("/Users/ingridspies/admbmodels/AI_Pcod/2022-SS")
setwd("/Users/ingridspies/admbmodels/AI_Pcod")
setwd("/Users/ingridspies/admbmodels/AI_Pcod/AI_Pcod-SS/functions")
setwd("/Users/ingridspies/admbmodels/AI_Pcod/2022_SS/AI_Pcod-SS/functions")
SS_readdat_3.30(AIPcod2021)
SS_readdat_3.30(AIPcod2021.dat)
SS_readdat_3.30("AIPcod2021.dat")
SS_readdat_3.24("AIPcod2021.dat")
library(r4ss)
SS_readdat_3.24("AIPcod2021.dat")
SS_readdat_3.30("AIPcod2021.dat")
SS_readdat_3.0("AIPcod2021.dat")
version(r4ss)
installed.packages(fields=c("r4ss","Version"))
packageDescription("r4ss")$Version
SS_readdat_3.0("AIPcod2021.dat")
SS_readdat_3.30("AIPcod2021.dat")
SS_readdat_3.24("AIPcod2021.dat")
SS_readdat_3.00("AIPcod2021.dat")
SS_readdat_3.24("AIPcod2021.dat")
SS_readdat_3.24("AIPcod2021.dat")
df_all$Names
packageDescription("r4ss")$Version
SS_readdat_3.30(AIPcod2021.dat)
getwd()
SS_readdat_3.30("AIPcod2021.dat")
SS_readdat_3.30("AIPcod2021Fill.dat")
getwd()
ls
SS_readdat_3.30("AIPcod2021Fill.dat")
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("Variance explained by PC", i), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("Variance explained by PC", i), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("Variance explained by PC", i), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
setwd("/Users/Carolyn/Documents/Work/Pcod/OutlierPCAs/")
##########################################################################################
##### Read in the variant AF matrix (SNPs that are variant >=1 pool) for ALL POOLS
##########################################################################################
#for PC
#variantAF_matrix <- read.delim("D:/PacificCodWGS/Genotyping/GATK/GATK_NoBQSR/VariantFiltering/HardFilteredSNPS_DPbyPool_Bi_NoMissing_FOURTH/NoUP2005/HardFiltered_byPool_Bi_NoMiss_MLE_LG_NoUP05_VariantAFmatrix.txt", header = TRUE)
#
#for Mac:
variantAF_matrix <- read.table("/Users/ingridspies/Documents/Carolyn_Cod/HardFiltered_byPool_Bi_NoMiss_MLE_LG_NoUP05_VariantAFmatrix.txt", header= TRUE)
pool_info <- read.csv("/Users/ingridspies/Documents/Carolyn_Cod/Pool_info_NoUP05.csv", header=TRUE)
#drop the reference and alternate AF columns
variantAF_matrix$Reference <- NULL
variantAF_matrix$Alternate <- NULL
#swap out the file number for the location_name of the pool
colnames(variantAF_matrix) <- c("Locus", pool_info$Location_year)
variantAF_matrix_noWA=variantAF_matrix
AF_all_outlier_lociWA <- variantAF_matrix[variantAF_matrix$Locus %in% EBS_WA_outlierSNPs$Locus,]
dim(AF_all_outlier_lociWA)
length(unique(ALU_EBS_outlierSNPs_withWindowInfo$Locus))
AF_all_outlier_loci <- variantAF_matrix[variantAF_matrix$Locus %in% ALU_EBS_outlierSNPs_withWindowInfo$Locus,]
dim(AF_all_outlier_loci)
reformat_AF_matrix_forPCAdapt <- function(AF_data = AF_all_outlier_loci){
SNP_names <- AF_data$Locus
pool_names <- colnames(AF_data)[-1]
outlier_loci_t <- as.data.frame(t(AF_data[,-1]))
colnames(outlier_loci_t) <- SNP_names
rownames(outlier_loci_t) <- pool_names
print(dim(outlier_loci_t))
print(outlier_loci_t[,1:11])
return(outlier_loci_t)
}
reformat_AF_matrix_ALL <- function(AF_data = variantAF_matrix){
SNP_names <- AF_data$Locus
pool_names <- colnames(AF_data)[-1]
outlier_loci_t <- as.data.frame(t(AF_data[,-1]))
colnames(outlier_loci_t) <- SNP_names
rownames(outlier_loci_t) <- pool_names
print(dim(outlier_loci_t))
print(outlier_loci_t[,1:11])
return(outlier_loci_t)
}
#all loci and all data
AF_all_SNP_names <- variantAF_matrix$Locus
AF_all_pool_names <- colnames(variantAF_matrix)[-1]
AF_all_transposed <- reformat_AF_matrix_ALL(AF_data = variantAF_matrix)
#all loci and all data (noWA)
AF_all_SNP_names_noWA <- variantAF_matrix_noWA$Locus
AF_all_pool_names_noWA <- colnames(variantAF_matrix_noWA)[-1]
AF_all_transposed_noWA <- reformat_AF_matrix_ALL(AF_data = variantAF_matrix_noWA)
#all outlier loci between ALU and EBS
AF_all_outlier_loci_SNP_names <- AF_all_outlier_loci$Locus
AF_all_outlier_loci_pool_names <- colnames(AF_all_outlier_loci)[-1]
AF_all_outlier_loci_transposed <- reformat_AF_matrix_forPCAdapt(AF_data = AF_all_outlier_loci)
#all outlier loci between ALU and EBS
AF_all_outlier_loci_SNP_namesWA <- AF_all_outlier_lociWA$Locus
AF_all_outlier_loci_pool_namesWA <- colnames(AF_all_outlier_lociWA)[-1]
AF_all_outlier_loci_transposedWA <- reformat_AF_matrix_forPCAdapt(AF_data = AF_all_outlier_lociWA)
all_pcadapt <- read.pcadapt(AF_all_transposed, type= "pool")
K=1
x_all <- pcadapt(input = all_pcadapt, K=K)
df_all$Names[2]="Washington (B)"
df_all$Names[4]="Pervenets (A)"
df_all$Names[5]="Pervenets (B)"
df_all$Names[7]="Kodiak (B)"
df_all$Names[1]="Kodiak (A)"
df_all$Names[10]="Washington (A)"
df_all$Line=rep(0,nrow(df_all))
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("Variance explained by PC", i), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("PC1, 13.3% variance explained"), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
fsh_sp_str=202 ,fsh_sp_label = "'PCOD'",sy=fsh_age_start_yr,ly=2021, STATE=1,max_age=10
fsh_sp_str=202;fsh_sp_label = "'PCOD'";sy=fsh_age_start_yr;ly=2021; STATE=1;max_age=10
fsh_sp_str=202;fsh_sp_label = "'PCOD'";sy=2020;ly=2021; STATE=1;max_age=10
require(RODBC)
require(data.table)
require(reshape2)
require(rgdal)
require(dplyr)
require(lubridate)
46998+15411+33104+14008
#Here is how I obtained outliers using false discovery rate method.
#########################
EBSAI=read.delim("ALU_EBS_noFilter_all_kKSMWA_FST_noBOOTS_sigma_30000_step_20000.txt",header=TRUE)
#get names for each pool
#for Mac:
pool_info <- read.table("/Users/ingridspies/Documents/Carolyn_Cod/Pool_info_NoUP05.txt", header=TRUE)
pool_info <- read.csv("/Users/ingridspies/Documents/Carolyn_Cod/Pool_info_NoUP05.csv", header=TRUE)
##########################################################################################
##### Read in the variant AF matrix (SNPs that are variant >=1 pool) for ALL POOLS
##########################################################################################
#for PC
#variantAF_matrix <- read.delim("D:/PacificCodWGS/Genotyping/GATK/GATK_NoBQSR/VariantFiltering/HardFilteredSNPS_DPbyPool_Bi_NoMissing_FOURTH/NoUP2005/HardFiltered_byPool_Bi_NoMiss_MLE_LG_NoUP05_VariantAFmatrix.txt", header = TRUE)
#
#for Mac:
variantAF_matrix <- read.table("/Users/ingridspies/Documents/Carolyn_Cod/HardFiltered_byPool_Bi_NoMiss_MLE_LG_NoUP05_VariantAFmatrix.txt", header= TRUE)
head(variantAF_matrix)
dim(variantAF_matrix)
pool_info <- read.csv("/Users/ingridspies/Documents/Carolyn_Cod/Pool_info_NoUP05.csv", header=TRUE)
#drop the reference and alternate AF columns
variantAF_matrix$Reference <- NULL
variantAF_matrix$Alternate <- NULL
#swap out the file number for the location_name of the pool
colnames(variantAF_matrix) <- c("Locus", pool_info$Location_year)
variantAF_matrix_noWA=variantAF_matrix
#skip this step to do all pools
#remove the WA coast pools, they're not EBS, KI or ALU
variantAF_matrix_noWA$Washington_2005a <- NULL
variantAF_matrix_noWA$Washington_2005b <- NULL
dim(variantAF_matrix)
head(variantAF_matrix)
EBS_WA_outlierSNPs=read.table("/Users/ingridspies/Documents/Carolyn_Cod/EBS_WA_high_BH_KSMWA_upper_Outlier_SNPs_1m_bootstraps_sigma_30000_step_20000.txt", header = TRUE)
#OUTLIERS WA EBS
length(unique(ALU_EBS_outlierSNPs_withWindowInfo$Locus))
AF_all_outlier_lociWA <- variantAF_matrix[variantAF_matrix$Locus %in% EBS_WA_outlierSNPs$Locus,]
dim(AF_all_outlier_lociWA)
##########################################################################################
##### ONLY keep AF of loci that are present in the ALU_EBS_outlierSNPs_withWindowInfo
##########################################################################################
#All the outlier SNPs, from any LG
length(unique(ALU_EBS_outlierSNPs_withWindowInfo$Locus))
AF_all_outlier_loci <- variantAF_matrix[variantAF_matrix$Locus %in% ALU_EBS_outlierSNPs_withWindowInfo$Locus,]
dim(AF_all_outlier_loci)
reformat_AF_matrix_forPCAdapt <- function(AF_data = AF_all_outlier_loci){
SNP_names <- AF_data$Locus
pool_names <- colnames(AF_data)[-1]
outlier_loci_t <- as.data.frame(t(AF_data[,-1]))
colnames(outlier_loci_t) <- SNP_names
rownames(outlier_loci_t) <- pool_names
print(dim(outlier_loci_t))
print(outlier_loci_t[,1:11])
return(outlier_loci_t)
}
reformat_AF_matrix_ALL <- function(AF_data = variantAF_matrix){
SNP_names <- AF_data$Locus
pool_names <- colnames(AF_data)[-1]
outlier_loci_t <- as.data.frame(t(AF_data[,-1]))
colnames(outlier_loci_t) <- SNP_names
rownames(outlier_loci_t) <- pool_names
print(dim(outlier_loci_t))
print(outlier_loci_t[,1:11])
return(outlier_loci_t)
}
#all loci and all data
AF_all_SNP_names <- variantAF_matrix$Locus
AF_all_pool_names <- colnames(variantAF_matrix)[-1]
AF_all_transposed <- reformat_AF_matrix_ALL(AF_data = variantAF_matrix)
#all loci and all data (noWA)
AF_all_SNP_names_noWA <- variantAF_matrix_noWA$Locus
AF_all_pool_names_noWA <- colnames(variantAF_matrix_noWA)[-1]
AF_all_transposed_noWA <- reformat_AF_matrix_ALL(AF_data = variantAF_matrix_noWA)
#all outlier loci between ALU and EBS
AF_all_outlier_loci_SNP_names <- AF_all_outlier_loci$Locus
all_pcadapt <- read.pcadapt(AF_all_transposed, type= "pool")
library(tidyverse)
library(pcadapt)
library(scales)
library(ggrepel)
all_pcadapt <- read.pcadapt(AF_all_transposed, type= "pool")
#I think one principal componenet should be retained in each case.
#CHange all to 1 principal component retained.
K=1
x_all <- pcadapt(input = all_pcadapt, K=K)
i=1
j=1
df_all <- data.frame(PC_i = x_all$scores[, i], PC_j = x_all$scores[, j], Pop = AF_all_pool_names)
Names=c("Kodiak (2003)","Washington (b)","Near", "Pervenets (a)","Pervenets (b)", "Kiska","Kodiak (2005)", "Pribilof", "Zhemchug", "Washington (a)","Adak")
df_all=cbind(df_all,Names)
ggplot(df_all, aes_string("PC_i", "PC_j")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("% variance explained by PC", i), y = paste0("% variance explained by PC", j)) +
theme_bw() + geom_text_repel(aes(label = Names), box.padding = unit(0.35, "lines"),max.overlaps=150)+
theme(axis.text=element_text(size=12), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
theme(legend.position = "none")
#two colors
two_cols <- c("Kodiak_2003"= "slateblue1", "Near_2005" = "tomato","Pervenets_2016a"= "slateblue1",  "Pervenets_2016b" = "slateblue1",  "Kiska_2005" = "tomato","Kodiak_2005"="slateblue1", "Pribilof_2017" = "slateblue1", "Zhemchug_2017"="slateblue1", "Adak_2006"= "tomato")
#three colors
three_cols <- c("Washington_2005a"= "grey","Washington_2005b"= "grey","Kodiak_2003"= "slateblue1", "Near_2005" = "tomato","Pervenets_2016a"= "slateblue1",  "Pervenets_2016b" = "slateblue1",  "Kiska_2005" = "tomato","Kodiak_2005"="slateblue1", "Pribilof_2017" = "slateblue1", "Zhemchug_2017"="slateblue1", "Adak_2006"= "tomato")
plot(rep(1,4),col=two_cols,pch=19,cex=7)
df_all <- data.frame(PC_i = x_all$scores[, i], PC_j = x_all$scores[, j], Pop = AF_all_pool_names)
Names=c("Kodiak (2003)","Washington (b)","Near", "Pervenets (a)","Pervenets (b)", "Kiska","Kodiak (2005)", "Pribilof", "Zhemchug", "Washington (a)","Adak")
df_all=cbind(df_all,Names)
ggplot(df_all, aes_string("PC_i", "PC_j")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("% variance explained by PC", i), y = paste0("% variance explained by PC", j)) +
theme_bw() + geom_text_repel(aes(label = Names), box.padding = unit(0.35, "lines"),max.overlaps=150)+
theme(axis.text=element_text(size=12), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
theme(legend.position = "none")
df_all$Names[2]="Washington (B)"
df_all$Names[4]="Pervenets (A)"
df_all$Names[5]="Pervenets (B)"
df_all$Names[7]="Kodiak (B)"
df_all$Names[1]="Kodiak (A)"
df_all$Names[10]="Washington (A)"
df_all$Line=rep(0,nrow(df_all))
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("PC1, 13.3% variance explained"), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
ggplot(df_all, aes_string("PC_i", "PC_j")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("% variance explained by PC", i), y = paste0("% variance explained by PC", j)) +
theme_bw() + geom_text_repel(aes(label = Names), box.padding = unit(0.35, "lines"),max.overlaps=150)+
theme(axis.text=element_text(size=12), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
theme(legend.position = "none")
ggplot(df_all, aes_string("PC_i", "PC_j")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("% variance explained by PC", i), y = paste0("% variance explained by PC", j)) +
theme_bw() + geom_text_repel(aes(label = Names), box.padding = unit(0.35, "lines"),max.overlaps=150)+
theme(axis.text=element_text(size=12), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
theme(legend.position = "none")
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("PC1, 13.3% variance explained"), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
plot.pcadapt(
x_all,
K = 2,
method = "mahalanobis",
min.maf = 0.05,
ploidy = NULL,
LD.clumping = NULL,
pca.only = FALSE,
tol
)
attributes(df_all)
df_all <- data.frame(PC_i = 0.133*x_all$scores[, i], PC_j = x_all$scores[, j], Pop = AF_all_pool_names)
Names=c("Kodiak (2003)","Washington (b)","Near", "Pervenets (a)","Pervenets (b)", "Kiska","Kodiak (2005)", "Pribilof", "Zhemchug", "Washington (a)","Adak")
df_all=cbind(df_all,Names)
ggplot(df_all, aes_string("PC_i", "PC_j")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("% variance explained by PC", i), y = paste0("% variance explained by PC", j)) +
theme_bw() + geom_text_repel(aes(label = Names), box.padding = unit(0.35, "lines"),max.overlaps=150)+
theme(axis.text=element_text(size=12), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
theme(legend.position = "none")
df_all$Names[2]="Washington (B)"
df_all$Names[4]="Pervenets (A)"
df_all$Names[5]="Pervenets (B)"
df_all$Names[7]="Kodiak (B)"
df_all$Names[1]="Kodiak (A)"
df_all$Names[10]="Washington (A)"
df_all$Line=rep(0,nrow(df_all))
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("PC1, 13.3% variance explained"), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("PC1, 13.3% variance explained"), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("PC1, 13.3% variance explained"), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
plot(sort(EBSAI_full$EBSAI_fst_dxy.weightedAverageFST));abline(h=0.03)
EBSAI_full=read.csv("/Users/ingridspies/Documents/Carolyn_Cod/EBSAI_full.csv")
plot(sort(EBSAI_full$EBSAI_fst_dxy.weightedAverageFST));abline(h=0.03)
plot(sort(EBSAI_full$EBSAI_fst_dxy.weightedAverageFST[which(EBSAI_full$EBSAI_fst_dxy.upper_outlier=="HighFstOutlier")]),ylab=expression(paste("", italic(F)[ST])))
abline(h=0.03);quantile(EBSAI_full$EBSAI_fst_dxy.weightedAverageFST[which(EBSAI_full$EBSAI_fst_dxy.upper_outlier=="HighFstOutlier")],na.rm=TRUE,.87)
plot(sort(EBSAI_full$EBSAI_fst_dxy.weightedAverageFST[which(EBSAI_full$EBSAI_fst_dxy.upper_outlier=="HighFstOutlier")]),ylab=expression(paste("", italic(F)[ST])))
abline(h=0.03);quantile(EBSAI_full$EBSAI_fst_dxy.weightedAverageFST[which(EBSAI_full$EBSAI_fst_dxy.upper_outlier=="HighFstOutlier")],na.rm=TRUE,.87)
library(coldpool)
coldpool::cold_pool_index$MEAN_BT_LT100M
coldpool::cold_pool_index$YEAR
coldpool::cold_pool_index$MEAN_BT_LT100M
coldpool::cold_pool_index$YEAR
devtools::install_github("afsc-gap-products/coldpool")
coldpool::cold_pool_index$YEAR
library(coldpool)
coldpool::cold_pool_index$YEAR
packageVersion('coldpool')
coldpool::cold_pool_index$MEAN_BT_LT100M
coldpool::cold_pool_index$YEAR
