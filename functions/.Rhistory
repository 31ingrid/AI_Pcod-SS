ylab(expression(paste("Weighted Average ", italic(F)[ST],", ", italic(d)[XY])))+facet_wrap(~LG_outliers3_ggp$Linkage_group,scales = "free_x",nrow = 2, ncol = 3,)+
geom_line(data=LG_outliers3_ggp,aes(x=windows,y=dxy_zeros))+geom_line(data=LG_outliers3_ggp,aes(x=windows,y=mean_dxy))+theme(axis.text.x=element_text(angle=45,hjust=1))+
geom_line(data=LG_outliers3_ggp,aes(x=windows,y=fst_all))+
geom_point(data=LG_outliers3_ggp,aes(x = windows, y = val-val+mean_dxy),alpha=1, size = 3, color = "black",fill="orange",shape=24)+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
guides(color=guide_legend(override.aes = list(size=3,linetype=c(0))))
ggplot()+ scale_color_manual(name="Legend",values = mid_violet2,labels=c(expression(paste(italic(d)[XY]," upper 5%")), expression(paste(italic(d)[XY]," lower 5%")),expression(paste(italic(F)[ST]," outlier    ")),"","",""),breaks=c("dxy_HIGH", "dxy_LOW", "HighFstOutlier","-1","-1","F"))+
geom_vline(data=LG_outliers3_ggp0,aes(xintercept = windows, colour=selected_regions),alpha=0.3,size=2.5)+
theme_bw()+
geom_point(data=LG_outliers3_ggp0,aes(x = windows, y = fst_sig_val,color=fst_sig),size=3)+
geom_point(data=LG_outliers3_ggp0,aes(x = windows, y = 10*dxy_sig_val,color=dxy_sig),size=2)+
xlab("Window position")+theme(plot.title = element_text(size = 10, face = "bold"), legend.position = "right")+
ylab(expression(paste("Weighted Average ", italic(F)[ST],", ", italic(d)[XY]," (x10)")))+facet_wrap(~LG_outliers3_ggp$Linkage_group,scales = "free_x",nrow = 2, ncol = 3,)+
geom_line(data=LG_outliers3_ggp0,aes(x=windows,y=10*dxy_zeros))+geom_line(data=LG_outliers3_ggp0,aes(x=windows,y=mean_dxy*10))+
theme(axis.text.x=element_text(angle=45,hjust=1))+
geom_line(data=LG_outliers3_ggp0,aes(x=windows,y=fst_all))+
geom_point(data=LG_outliers3_ggp0,aes(x = windows, y = val-val+10*mean_dxy+.005),alpha=1, size = 3, color = "black",fill="orange",shape=24)+
geom_text(data=LG_outliers3_ggp0,aes(x = windows,y=val+.016,label=gene),size=3.5)+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
guides(color=guide_legend(override.aes = list(size=3,linetype=c(0))))+ylim(c(0,0.09))
library(tidyverse)
library(pcadapt)
library(scales)
library(ggrepel)
### Garbage collection on the memory for R
gc(full=TRUE)
### avoid scientific notation
options(scipen = 999)
## set working directory
#for PC
#setwd("D:/PacificCodWGS/Analysis/KernelSMWA/popoolation2/ALU_EBS_1m")
#for mac
#setwd("/Volumes/Carolyn/PacificCodWGS/Analysis/KernelSMWA/popoolation2/ALU_EBS_1m/")
setwd("/Users/Carolyn/Documents/Work/Pcod/OutlierPCAs/")
# ##########################################################################################
# ##### Read in the PerSNP FST file for the ALU_EBS pools
# ##########################################################################################
# #for PC
# #PERSNP_FST_ALU_EBS <- read.table("D:/PacificCodWGS/Analysis/KernelSMWA/popoolation2/EditedPerSNP_VariantAFMatrixOnly_FST_ALU_EBS.txt", header= TRUE)
#
# #for Mac
# PERSNP_FST_ALU_EBS <- read.table("/Volumes/Carolyn/PacificCodWGS/Analysis/KernelSMWA/popoolation2/EditedPerSNP_VariantAFMatrixOnly_FST_ALU_EBS.txt", header= TRUE)
# head(PERSNP_FST_ALU_EBS)
##########################################################################################
##### Read in the Outlier SNPs with Window Information file made by find_SNPS_in_KSWMA_OutWinds_takesKSMWAFST_SNPpos Pcod_KSMWA_popoolation2_FST_toOutlierID_ALU_EBS.R
##########################################################################################
#for PC
#ALU_EBS_outlierSNPs_withWindowInfo <- read.table("D:/PacificCodWGS/Analysis/KernelSMWA/popoolation2/ALU_EBS_1m/ALU_EBS_noFilter_KSMWA_popoolation2_upper_Outlier_SNPs_withWindowInfo_1m_bootstraps_sigma_30000_step_20000.txt", header= TRUE)
#for Mac:
ALU_EBS_outlierSNPs_withWindowInfo <- read.table("/Volumes/LaCie/cod/WGS_PCAs/ALU_EBS_noFilter_KSMWA_popoolation2_upper_Outlier_SNPs_withWindowInfo_1m_bootstraps_sigma_30000_step_20000.txt", header= TRUE)
#for both:
ALU_EBS_outlierSNPs_withWindowInfo$chromosome.1 <- NULL
head(ALU_EBS_outlierSNPs_withWindowInfo)
dim(ALU_EBS_outlierSNPs_withWindowInfo)
##########################################################################################
##### Read in the variant AF matrix (SNPs that are variant >=1 pool) for ALL POOLS
##########################################################################################
#for PC
#variantAF_matrix <- read.delim("D:/PacificCodWGS/Genotyping/GATK/GATK_NoBQSR/VariantFiltering/HardFilteredSNPS_DPbyPool_Bi_NoMissing_FOURTH/NoUP2005/HardFiltered_byPool_Bi_NoMiss_MLE_LG_NoUP05_VariantAFmatrix.txt", header = TRUE)
#
#for Mac:
variantAF_matrix <- read.table("/Users/ingridspies/Documents/Carolyn_Cod/HardFiltered_byPool_Bi_NoMiss_MLE_LG_NoUP05_VariantAFmatrix.txt", header= TRUE)
head(variantAF_matrix)
dim(variantAF_matrix)
#get names for each pool
#for Mac:
pool_info <- read.table("/Users/ingridspies/Documents/Carolyn_Cod/Pool_info_NoUP05.txt", header=TRUE)
pool_info <- read.csv("/Users/ingridspies/Documents/Carolyn_Cod/Pool_info_NoUP05.csv", header=TRUE)
#pool_info$Loc=c("Kodiak (2003)","Washington (b)","Near","Pervenets (a)","Pervenets (b)","Kiska","Kodiak (2005)","Pribilof","Zhemchug","Washington (a)","Adak")
#drop the reference and alternate AF columns
variantAF_matrix$Reference <- NULL
variantAF_matrix$Alternate <- NULL
#swap out the file number for the location_name of the pool
colnames(variantAF_matrix) <- c("Locus", pool_info$Location_year)
variantAF_matrix_noWA=variantAF_matrix
#skip this step to do all pools
#remove the WA coast pools, they're not EBS, KI or ALU
variantAF_matrix_noWA$Washington_2005a <- NULL
variantAF_matrix_noWA$Washington_2005b <- NULL
dim(variantAF_matrix)
head(variantAF_matrix)
##########################################################################################
##### ONLY keep AF of loci that are present in the WA_EBS_outlierSNPs_withWindowInfo
##########################################################################################
EBS_WA_outlierSNPs=read.table("/Users/ingridspies/Documents/Carolyn_Cod/EBS_WA_high_BH_KSMWA_upper_Outlier_SNPs_1m_bootstraps_sigma_30000_step_20000.txt", header = TRUE)
#OUTLIERS WA EBS
length(unique(ALU_EBS_outlierSNPs_withWindowInfo$Locus))
AF_all_outlier_lociWA <- variantAF_matrix[variantAF_matrix$Locus %in% EBS_WA_outlierSNPs$Locus,]
dim(AF_all_outlier_lociWA)
##########################################################################################
##### ONLY keep AF of loci that are present in the ALU_EBS_outlierSNPs_withWindowInfo
##########################################################################################
#All the outlier SNPs, from any LG
length(unique(ALU_EBS_outlierSNPs_withWindowInfo$Locus))
AF_all_outlier_loci <- variantAF_matrix[variantAF_matrix$Locus %in% ALU_EBS_outlierSNPs_withWindowInfo$Locus,]
dim(AF_all_outlier_loci)
#All the outlier SNPs (noWA), from any LG
length(unique(ALU_EBS_outlierSNPs_withWindowInfo$Locus))
AF_all_outlier_loci_noWA <- variantAF_matrix_noWA[variantAF_matrix_noWA$Locus %in% ALU_EBS_outlierSNPs_withWindowInfo$Locus,]
dim(AF_all_outlier_loci_noWA)
#All the outlier SNPs from the 2ish peaks at LG08 that are between 0 and 5 million bp
lg08_SNPs_in2peaks <- ALU_EBS_outlierSNPs_withWindowInfo[ALU_EBS_outlierSNPs_withWindowInfo$chromosome =="LG08" &  ALU_EBS_outlierSNPs_withWindowInfo$window_stop <= 5000000,]
head(lg08_SNPs_in2peaks)
dim(lg08_SNPs_in2peaks)
length(unique(lg08_SNPs_in2peaks$Locus))
lg08_outlier_AF <- AF_all_outlier_loci_noWA[AF_all_outlier_loci_noWA$Locus %in% lg08_SNPs_in2peaks$Locus,]
dim(lg08_outlier_AF)
#All the outlier SNPs from the peaks at LG12  (there is really only one big outlier peak on LG12)
lg12_outlierSNPs <- ALU_EBS_outlierSNPs_withWindowInfo[ALU_EBS_outlierSNPs_withWindowInfo$chromosome =="LG12",]
head(lg12_outlierSNPs)
dim(lg12_outlierSNPs)
length(unique(lg12_outlierSNPs$Locus))
lg12_outlierSNPs_AF <- AF_all_outlier_loci_noWA[AF_all_outlier_loci_noWA$Locus %in% lg12_outlierSNPs$Locus,]
dim(lg12_outlierSNPs_AF)
head(lg12_outlierSNPs_AF)
##########################################################################################
#### PCAs from the outlier loci allele frequency data sets we just made
##########################################################################################
#STEP 1:  reformat the AF data files
#we have to transpose the three sets of data we just made
reformat_AF_matrix_forPCAdapt <- function(AF_data = AF_all_outlier_loci){
SNP_names <- AF_data$Locus
pool_names <- colnames(AF_data)[-1]
outlier_loci_t <- as.data.frame(t(AF_data[,-1]))
colnames(outlier_loci_t) <- SNP_names
rownames(outlier_loci_t) <- pool_names
print(dim(outlier_loci_t))
print(outlier_loci_t[,1:11])
return(outlier_loci_t)
}
reformat_AF_matrix_ALL <- function(AF_data = variantAF_matrix){
SNP_names <- AF_data$Locus
pool_names <- colnames(AF_data)[-1]
outlier_loci_t <- as.data.frame(t(AF_data[,-1]))
colnames(outlier_loci_t) <- SNP_names
rownames(outlier_loci_t) <- pool_names
print(dim(outlier_loci_t))
print(outlier_loci_t[,1:11])
return(outlier_loci_t)
}
#all loci and all data
AF_all_SNP_names <- variantAF_matrix$Locus
AF_all_pool_names <- colnames(variantAF_matrix)[-1]
AF_all_transposed <- reformat_AF_matrix_ALL(AF_data = variantAF_matrix)
#all loci and all data (noWA)
AF_all_SNP_names_noWA <- variantAF_matrix_noWA$Locus
AF_all_pool_names_noWA <- colnames(variantAF_matrix_noWA)[-1]
AF_all_transposed_noWA <- reformat_AF_matrix_ALL(AF_data = variantAF_matrix_noWA)
#all outlier loci between ALU and EBS
AF_all_outlier_loci_SNP_names <- AF_all_outlier_loci$Locus
AF_all_outlier_loci_pool_names <- colnames(AF_all_outlier_loci)[-1]
AF_all_outlier_loci_transposed <- reformat_AF_matrix_forPCAdapt(AF_data = AF_all_outlier_loci)
#all outlier loci between ALU and EBS
AF_all_outlier_loci_SNP_namesWA <- AF_all_outlier_lociWA$Locus
AF_all_outlier_loci_pool_namesWA <- colnames(AF_all_outlier_lociWA)[-1]
AF_all_outlier_loci_transposedWA <- reformat_AF_matrix_forPCAdapt(AF_data = AF_all_outlier_lociWA)
#Outlier loci in LG08 (first to big peaks <5mil bp)
lg08_outlier_AF_SNP_names <- lg08_outlier_AF$Locus
lg08_outlier_AF_pool_names <- colnames(lg08_outlier_AF)[-1]
lg08_outlier_AF_transposed <-reformat_AF_matrix_forPCAdapt(AF_data = lg08_outlier_AF)
# Outlier loci in LG12 (there is just one big peak)
lg12_outlierSNPs_AF_SNP_names <- lg12_outlierSNPs_AF$Locus
lg12_outlierSNPs_AF_pool_names <- colnames(lg12_outlierSNPs_AF)[-1]
lg12_outlierSNPs_AF_transposed <-reformat_AF_matrix_forPCAdapt(AF_data = lg12_outlierSNPs_AF)
##########################################################################################
#STEP 1.5:  read the data in pcadapt data formatted file
##read.pcadapt converts different types of files to the pcadapt format and
#returns a character string containing the name of the converted file,
#which should be used as input for the pcadapt function.
#for pooled samples, it needs a matrix of relative frequencies with n rows (pops) l cols (markers)
all_pcadapt <- read.pcadapt(AF_all_transposed, type= "pool")
all_pcadapt_noWA <- read.pcadapt(AF_all_transposed_noWA, type= "pool")#1944780
all_outliers_pcadapt <- read.pcadapt(AF_all_outlier_loci_transposed, type= "pool")
all_outliers_pcadaptWA <- read.pcadapt(AF_all_outlier_loci_transposedWA, type= "pool")
lg08_outliers_pcadapt <- read.pcadapt(lg08_outlier_AF_transposed, type= "pool")
lg12_outliers_pcadapt <- read.pcadapt(lg12_outlierSNPs_AF_transposed, type= "pool")
x_all <- pcadapt(input = all_pcadapt, K=K)
K=10
x_all <- pcadapt(input = all_pcadapt, K=K)
plot(x_all, option = "screeplot") + theme_bw()
attributes(x_all)
x_all$scores
x_all$singular.values
x_all$loadings
x_all$zscores
x_all$gif
x_all$loadings
df_all <- data.frame(PC_i = x_all$scores[, i], PC_j = x_all$scores[, j], Pop = AF_all_pool_names)
Names=c("Kodiak (2003)","Washington (b)","Near", "Pervenets (a)","Pervenets (b)", "Kiska","Kodiak (2005)", "Pribilof", "Zhemchug", "Washington (a)","Adak")
df_all=cbind(df_all,Names)
ggplot(df_all, aes_string("PC_i", "PC_j")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("% variance explained by PC", i), y = paste0("% variance explained by PC", j)) +
theme_bw() + geom_text_repel(aes(label = Names), box.padding = unit(0.35, "lines"),max.overlaps=150)+
theme(axis.text=element_text(size=12), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
theme(legend.position = "none")
df_all <- data.frame(PC_i = x_all$scores[, i], PC_j = x_all$scores[, j], Pop = AF_all_pool_names)
i=1
j=2
df_all <- data.frame(PC_i = x_all$scores[, i], PC_j = x_all$scores[, j], Pop = AF_all_pool_names)
Names=c("Kodiak (2003)","Washington (b)","Near", "Pervenets (a)","Pervenets (b)", "Kiska","Kodiak (2005)", "Pribilof", "Zhemchug", "Washington (a)","Adak")
df_all=cbind(df_all,Names)
ggplot(df_all, aes_string("PC_i", "PC_j")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("% variance explained by PC", i), y = paste0("% variance explained by PC", j)) +
theme_bw() + geom_text_repel(aes(label = Names), box.padding = unit(0.35, "lines"),max.overlaps=150)+
theme(axis.text=element_text(size=12), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
theme(legend.position = "none")
#three colors
three_cols <- c("Washington_2005a"= "grey","Washington_2005b"= "grey","Kodiak_2003"= "slateblue1", "Near_2005" = "tomato","Pervenets_2016a"= "slateblue1",  "Pervenets_2016b" = "slateblue1",  "Kiska_2005" = "tomato","Kodiak_2005"="slateblue1", "Pribilof_2017" = "slateblue1", "Zhemchug_2017"="slateblue1", "Adak_2006"= "tomato")
ggplot(df_all, aes_string("PC_i", "PC_j")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("% variance explained by PC", i), y = paste0("% variance explained by PC", j)) +
theme_bw() + geom_text_repel(aes(label = Names), box.padding = unit(0.35, "lines"),max.overlaps=150)+
theme(axis.text=element_text(size=12), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
theme(legend.position = "none")
ggplot(df_all, aes_string("PC_i", "PC_j")) +
geom_point(aes(size = 3))
df_all$Names[2]="Washington (B)"
df_all$Names[4]="Pervenets (A)"
df_all$Names[5]="Pervenets (B)"
df_all$Names[7]="Kodiak (B)"
df_all$Names[1]="Kodiak (A)"
df_all$Names[10]="Washington (A)"
df_all$Line=rep(0,nrow(df_all))
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("Proportion of variance explained by PC", i), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
?pcadapt
class(x_all)
plot(x_all)
plot(x_all,i=1,j=1)
plot(x_all,option = "manhattan",
i = 1,
j = 2,
pop,
col,
chr.info = NULL,
snp.info = NULL,
plt.pkg = "ggplot",
K = NULL
)
pcadapt(
x_all,
K = (nrow(input) - 1),
method = "mahalanobis",
min.maf = 0.05,
ploidy = NULL,
LD.clumping = NULL,
pca.only = FALSE,
tol
)
pcadapt(
x_all,
K = 2,
method = "mahalanobis",
min.maf = 0.05,
ploidy = NULL,
LD.clumping = NULL,
pca.only = FALSE,
tol
)
?plot.pcadapt
plot.pcadapt(
x_all,
K = 2,
method = "mahalanobis",
min.maf = 0.05,
ploidy = NULL,
LD.clumping = NULL,
pca.only = FALSE,
tol
)
?plot.pcadapt
plot(x_all, option = "scores") + theme_bw()
x_all
plot(x_all, option = "scores",K=1) + theme_bw()
plot(x_all, option = "scores",i=1,j=1) + theme_bw()
plot(x_all, option = "scores",i=1) + theme_bw()
plot(x_all, option = "scores",i=1,j=0) + theme_bw()
plot(x_all, option = "scores",i=1) + theme_bw()
hist(x_all$pvalues, xlab = "p-values", main = NULL, breaks = 50, col = "orange")
hist(x_all$pvalues, xlab = "p-values", main = NULL, breaks = 10, col = "orange")
K=1
x_all <- pcadapt(input = all_pcadapt, K=K)
plot(x_all, option = "scores",i=1) + theme_bw()
plot(x_all, option = "scores") + theme_bw()
plot(x_all, option = "scores") + theme_bw()
K=10
x_all <- pcadapt(input = all_pcadapt, K=K)
plot(x_all, option = "scores") + theme_bw()
x_all$scores
K=1
x_all <- pcadapt(input = all_pcadapt, K=K)
x_all$scores
plot(x_all$scores)
x_all$scores=x_all$scores*.133
plot(x_all, option = "scores") + theme_bw()
df_all$Names[2]="Washington (B)"
df_all$Names[4]="Pervenets (A)"
df_all$Names[5]="Pervenets (B)"
df_all$Names[7]="Kodiak (B)"
df_all$Names[1]="Kodiak (A)"
df_all$Names[10]="Washington (A)"
df_all$Line=rep(0,nrow(df_all))
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("Proportion of variance explained by PC", i), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
df_all <- data.frame(PC_i = x_all$scores[, i], PC_j = x_all$scores[, j], Pop = AF_all_pool_names)
i=1
j=2
df_all <- data.frame(PC_i = x_all$scores[, i], PC_j = x_all$scores[, j], Pop = AF_all_pool_names)
x_all$scores[, i]
df_all <- data.frame(PC_i = x_all$scores[, i], PC_j = x_all$scores[, j], Pop = AF_all_pool_names)
x_all$scores[, j]
j
j=1
df_all <- data.frame(PC_i = x_all$scores[, i], PC_j = x_all$scores[, j], Pop = AF_all_pool_names)
Names=c("Kodiak (2003)","Washington (b)","Near", "Pervenets (a)","Pervenets (b)", "Kiska","Kodiak (2005)", "Pribilof", "Zhemchug", "Washington (a)","Adak")
df_all=cbind(df_all,Names)
ggplot(df_all, aes_string("PC_i", "PC_j")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("% variance explained by PC", i), y = paste0("% variance explained by PC", j)) +
theme_bw() + geom_text_repel(aes(label = Names), box.padding = unit(0.35, "lines"),max.overlaps=150)+
theme(axis.text=element_text(size=12), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
theme(legend.position = "none")
df_all$Names[2]="Washington (B)"
df_all$Names[4]="Pervenets (A)"
df_all$Names[5]="Pervenets (B)"
df_all$Names[7]="Kodiak (B)"
df_all$Names[1]="Kodiak (A)"
df_all$Names[10]="Washington (A)"
df_all$Line=rep(0,nrow(df_all))
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("Proportion of variance explained by PC", i), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("Variance explained by PC", i), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
K=11
x_all <- pcadapt(input = all_pcadapt, K=K)
plot(x_all, option = "screeplot") + theme_bw()
K=10
x_all <- pcadapt(input = all_pcadapt, K=K)
library(r4ss)
setwd("/Users/ingridspies/admbmodels/AI_Pcod/2022_SS")
getwd
getwd()
setwd("/Users/ingridspies/admbmodels/AI_Pcod/2022_SS/functions")
ls()
setwd("/Users/ingridspies/admbmodels/AI_Pcod/2022-SS/functions")
setwd("/Users/ingridspies/admbmodels/AI_Pcod/2022-SS")
setwd("/Users/ingridspies/admbmodels/AI_Pcod")
setwd("/Users/ingridspies/admbmodels/AI_Pcod/AI_Pcod-SS/functions")
setwd("/Users/ingridspies/admbmodels/AI_Pcod/2022_SS/AI_Pcod-SS/functions")
SS_readdat_3.30(AIPcod2021)
SS_readdat_3.30(AIPcod2021.dat)
SS_readdat_3.30("AIPcod2021.dat")
SS_readdat_3.24("AIPcod2021.dat")
library(r4ss)
SS_readdat_3.24("AIPcod2021.dat")
SS_readdat_3.30("AIPcod2021.dat")
SS_readdat_3.0("AIPcod2021.dat")
version(r4ss)
installed.packages(fields=c("r4ss","Version"))
packageDescription("r4ss")$Version
SS_readdat_3.0("AIPcod2021.dat")
SS_readdat_3.30("AIPcod2021.dat")
SS_readdat_3.24("AIPcod2021.dat")
SS_readdat_3.00("AIPcod2021.dat")
SS_readdat_3.24("AIPcod2021.dat")
SS_readdat_3.24("AIPcod2021.dat")
df_all$Names
packageDescription("r4ss")$Version
SS_readdat_3.30(AIPcod2021.dat)
getwd()
SS_readdat_3.30("AIPcod2021.dat")
SS_readdat_3.30("AIPcod2021Fill.dat")
getwd()
ls
SS_readdat_3.30("AIPcod2021Fill.dat")
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("Variance explained by PC", i), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("Variance explained by PC", i), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("Variance explained by PC", i), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
setwd("/Users/Carolyn/Documents/Work/Pcod/OutlierPCAs/")
##########################################################################################
##### Read in the variant AF matrix (SNPs that are variant >=1 pool) for ALL POOLS
##########################################################################################
#for PC
#variantAF_matrix <- read.delim("D:/PacificCodWGS/Genotyping/GATK/GATK_NoBQSR/VariantFiltering/HardFilteredSNPS_DPbyPool_Bi_NoMissing_FOURTH/NoUP2005/HardFiltered_byPool_Bi_NoMiss_MLE_LG_NoUP05_VariantAFmatrix.txt", header = TRUE)
#
#for Mac:
variantAF_matrix <- read.table("/Users/ingridspies/Documents/Carolyn_Cod/HardFiltered_byPool_Bi_NoMiss_MLE_LG_NoUP05_VariantAFmatrix.txt", header= TRUE)
pool_info <- read.csv("/Users/ingridspies/Documents/Carolyn_Cod/Pool_info_NoUP05.csv", header=TRUE)
#drop the reference and alternate AF columns
variantAF_matrix$Reference <- NULL
variantAF_matrix$Alternate <- NULL
#swap out the file number for the location_name of the pool
colnames(variantAF_matrix) <- c("Locus", pool_info$Location_year)
variantAF_matrix_noWA=variantAF_matrix
AF_all_outlier_lociWA <- variantAF_matrix[variantAF_matrix$Locus %in% EBS_WA_outlierSNPs$Locus,]
dim(AF_all_outlier_lociWA)
length(unique(ALU_EBS_outlierSNPs_withWindowInfo$Locus))
AF_all_outlier_loci <- variantAF_matrix[variantAF_matrix$Locus %in% ALU_EBS_outlierSNPs_withWindowInfo$Locus,]
dim(AF_all_outlier_loci)
reformat_AF_matrix_forPCAdapt <- function(AF_data = AF_all_outlier_loci){
SNP_names <- AF_data$Locus
pool_names <- colnames(AF_data)[-1]
outlier_loci_t <- as.data.frame(t(AF_data[,-1]))
colnames(outlier_loci_t) <- SNP_names
rownames(outlier_loci_t) <- pool_names
print(dim(outlier_loci_t))
print(outlier_loci_t[,1:11])
return(outlier_loci_t)
}
reformat_AF_matrix_ALL <- function(AF_data = variantAF_matrix){
SNP_names <- AF_data$Locus
pool_names <- colnames(AF_data)[-1]
outlier_loci_t <- as.data.frame(t(AF_data[,-1]))
colnames(outlier_loci_t) <- SNP_names
rownames(outlier_loci_t) <- pool_names
print(dim(outlier_loci_t))
print(outlier_loci_t[,1:11])
return(outlier_loci_t)
}
#all loci and all data
AF_all_SNP_names <- variantAF_matrix$Locus
AF_all_pool_names <- colnames(variantAF_matrix)[-1]
AF_all_transposed <- reformat_AF_matrix_ALL(AF_data = variantAF_matrix)
#all loci and all data (noWA)
AF_all_SNP_names_noWA <- variantAF_matrix_noWA$Locus
AF_all_pool_names_noWA <- colnames(variantAF_matrix_noWA)[-1]
AF_all_transposed_noWA <- reformat_AF_matrix_ALL(AF_data = variantAF_matrix_noWA)
#all outlier loci between ALU and EBS
AF_all_outlier_loci_SNP_names <- AF_all_outlier_loci$Locus
AF_all_outlier_loci_pool_names <- colnames(AF_all_outlier_loci)[-1]
AF_all_outlier_loci_transposed <- reformat_AF_matrix_forPCAdapt(AF_data = AF_all_outlier_loci)
#all outlier loci between ALU and EBS
AF_all_outlier_loci_SNP_namesWA <- AF_all_outlier_lociWA$Locus
AF_all_outlier_loci_pool_namesWA <- colnames(AF_all_outlier_lociWA)[-1]
AF_all_outlier_loci_transposedWA <- reformat_AF_matrix_forPCAdapt(AF_data = AF_all_outlier_lociWA)
all_pcadapt <- read.pcadapt(AF_all_transposed, type= "pool")
K=1
x_all <- pcadapt(input = all_pcadapt, K=K)
df_all$Names[2]="Washington (B)"
df_all$Names[4]="Pervenets (A)"
df_all$Names[5]="Pervenets (B)"
df_all$Names[7]="Kodiak (B)"
df_all$Names[1]="Kodiak (A)"
df_all$Names[10]="Washington (A)"
df_all$Line=rep(0,nrow(df_all))
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("Variance explained by PC", i), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
ggplot(df_all, aes_string("PC_i","Line")) +
geom_point(aes(size = 3)) +
scale_color_manual(name = "", values = three_cols) +
ggtitle(paste0("All 1,944,780 SNPs, all LGs")) + labs(x = paste0("PC1, 13.3% variance explained"), y = "") +
geom_text_repel(aes(label = Names), box.padding = unit(0.55, "lines"),max.overlaps=180)+
theme(axis.text=element_text(size=14), plot.title = element_text(size=14),axis.title=element_text(size=14,face="bold")) +
ylim(c(-.01,.01))+theme_bw()+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(),axis.title.x=element_text(size=rel(1.3)),axis.text.x=element_text(size=rel(1.2)))+ theme(legend.position = "none")
